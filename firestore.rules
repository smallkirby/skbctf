rules_version = '2';

service cloud.firestore {

  match /databases/{database}/documents {
    match /users/{uid} {
    		function signedIn() {
					return request.auth.uid != null
				}
  			function isOwnPath(uid) {
  				return uid == request.auth.uid
  			}
        function validCreation(data) {
        	return data.keys().hasAll(['twitter_screenName', 'twitter_id', 'twitter_displayName', 'registered_at', 'solves', 'uid', 'photourl'])
          && data.keys().hasOnly(['twitter_screenName', 'twitter_id', 'twitter_displayName', 'registered_at', 'solves', 'uid', 'photourl'])
          && data.uid is string && data.twitter_id is string && data.twitter_screenName is string && data.twitter_displayName is string 
          && data.registered_at is timestamp && data.photourl is string
          && data.solves is list && data.solves.size() == 0
          ;
        }

        function validUpdate(data) {
          return data.keys().hasAll(['twitter_id', 'twitter_displayName', 'photourl']) && data.keys().hasAll(['twitter_id', 'twitter_displayName', 'photourl'])
          && data.twitter_id is string && data.twitter_displayName is string && data.photourl is string
        }

      	allow create: if signedIn() && isOwnPath(uid) && validCreation(request.resource.data);
        allow delete: if false;
        allow update: if signedIn() && isOwnPath(uid) && validUpdate(request.resource.data);
        allow read: if signedIn() && isOwnPath(uid);
    }

    match /flags/{uid} {
      	allow create: if false;
        allow delete: if false;
        allow update: if false;
        allow read: if false;
    }

    match /ranks/{uid} {
    		function signedIn() {
					return request.auth.uid != null
				}
  			function isOwnPath(uid) {
  				return uid == request.auth.uid
  			}
        allow create: if false;
        allow delete: if false;
        allow update: if false;
        allow read: if true;
    }

    match /solves/{challid} {
        allow create: if false;
        allow delete: if false;
        allow update: if false;
        allow read: if true;
    }
  }
}